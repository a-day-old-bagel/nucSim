# Use this open statement to create an OpenGL view:
#/vis/open OGL 600x600-0+0

# Draw geometry:
#/vis/drawVolume

# Specify view angle:
#/vis/viewer/set/viewpointThetaPhi 90. 180.

# Specify zoom value:
#/vis/viewer/zoom 1.4

# Draw smooth trajectories at end of event, showing trajectory points
# as markers 2 pixels wide:
#/vis/scene/add/trajectories smooth
#/vis/modeling/trajectories/create/drawByCharge
#/vis/modeling/trajectories/drawByCharge-0/default/setDrawStepPts true
#/vis/modeling/trajectories/drawByCharge-0/default/setStepPtsSize 1

# To draw only gammas:
#/vis/filtering/trajectories/create/particleFilter
#/vis/filtering/trajectories/particleFilter-0/add gamma

# To superimpose all of the events from a given run:
#/vis/scene/endOfEventAction accumulate

# if too many tracks cause core dump
#/tracking/storeTrajectory 0)

# verbosity
/control/verbose 0
/run/verbose 0
/event/verbose 0
/tracking/verbose 1

# run

#/gun/particle gamma 
#/gun/energy 100 eV
#/run/beamOn 100

#/gun/particle gamma 
#/gun/energy 1 keV
#/run/beamOn 100

/gun/particle gamma 
/gun/energy 10 keV
/run/beamOn 100

#/gun/particle gamma 
#/gun/energy 100 keV
#/run/beamOn 100

#/gun/particle gamma 
#/gun/energy 1 MeV
#/run/beamOn 100

#/gun/particle gamma 
#/gun/energy 10 MeV
#/run/beamOn 100

#/gun/particle gamma 
#/gun/energy 100 MeV
#/run/beamOn 100

#/gun/particle gamma 
#/gun/energy 1 GeV
#/run/beamOn 100

